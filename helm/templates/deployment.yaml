apiVersion: apps/v1
kind: Deployment
metadata:
  name: avalond
  labels:
    app: avalond
    app.kubernetes.io/name: avalond
    app.kubernetes.io/version: {{ .Values.image.tag | default .Chart.AppVersion }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: avalond
  template:
    metadata:
      labels:
        app: avalond
        app.kubernetes.io/name: avalond
        prometheus.io/port: "2223"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - name: avalond
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3000
          envFrom:
            - secretRef:
                name: avalond-prod-auth0-config
          env:
            - name: AD_POSTGRES_PASSWD
              valueFrom:
                secretKeyRef:
                  name: avalond-prod-pguser-postgres
                  key: password
            - name: AD_ETCD_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: avalond-prod-etcd
                  key: etcd-root-password
          volumeMounts:
            - name: avalond-config
              mountPath: "/etc/avalond"
              readOnly: true
            - name: avalond-blueprints
              mountPath: "/opt/blueprints"
              readOnly: true
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 3
            periodSeconds: 5
      volumes:
        - name: avalond-config
          configMap:
            name: avalond-config-file
        - name: avalond-blueprints
          configMap:
            name: avalond-blueprints
